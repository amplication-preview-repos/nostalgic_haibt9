/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  CurriculumModule as PrismaCurriculumModule,
  DegreeSpecialty as PrismaDegreeSpecialty,
} from "@prisma/client";

export class CurriculumModuleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CurriculumModuleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.curriculumModule.count(args);
  }

  async curriculumModules<T extends Prisma.CurriculumModuleFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CurriculumModuleFindManyArgs>
  ): Promise<PrismaCurriculumModule[]> {
    return this.prisma.curriculumModule.findMany<Prisma.CurriculumModuleFindManyArgs>(
      args
    );
  }
  async curriculumModule<T extends Prisma.CurriculumModuleFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CurriculumModuleFindUniqueArgs>
  ): Promise<PrismaCurriculumModule | null> {
    return this.prisma.curriculumModule.findUnique(args);
  }
  async createCurriculumModule<T extends Prisma.CurriculumModuleCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CurriculumModuleCreateArgs>
  ): Promise<PrismaCurriculumModule> {
    return this.prisma.curriculumModule.create<T>(args);
  }
  async updateCurriculumModule<T extends Prisma.CurriculumModuleUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CurriculumModuleUpdateArgs>
  ): Promise<PrismaCurriculumModule> {
    return this.prisma.curriculumModule.update<T>(args);
  }
  async deleteCurriculumModule<T extends Prisma.CurriculumModuleDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CurriculumModuleDeleteArgs>
  ): Promise<PrismaCurriculumModule> {
    return this.prisma.curriculumModule.delete(args);
  }

  async getDegreeSpecialty(
    parentId: string
  ): Promise<PrismaDegreeSpecialty | null> {
    return this.prisma.curriculumModule
      .findUnique({
        where: { id: parentId },
      })
      .degreeSpecialty();
  }
}
